# -*- coding: utf-8 -*-

# self implementation generated from reading ui file 'testTbale.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
import typing

from PyQt5.QtWidgets import QApplication, QWidget,QTableWidget
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem,QPushButton
from PyQt5.Qt import Qt,QColor,QHeaderView


class Table(QTableWidget):

    def __init__(self, *args,**kwargs) -> None:
        super().__init__(*args,**kwargs)


        self.createTitle(["头","hh"])
        self.setHeaderVisible(False)

        self.addItem(["dsad","djks"],textAlignment=True)
        self.addWidget(0)
        self.addItem("123")

        self.setForegroundColor(QColor(20,200,90))


    def allBackgroundColor(self,color:QColor,bf="bg"):
        color_template = '''
QTableWidget::item{
background-color:white;
color:black;
}
        '''
        if bf == "bg":
            color_template = color_template.replace("white", "rgb({},{},{},{})".format(*color.getRgb()[:3]))
        if bf == "bf":
            color_template = color_template.replace("black", "rgb({},{},{})".format(*color.getRgb()[:3]))
        self.setStyleSheet(color_template)

    # 设置背景色
    def setBackgroundColor(self,color:QColor):
        self.allBackgroundColor(color,"bg")

    # 设置前景色
    def setForegroundColor(self,color:QColor):
        self.allBackgroundColor(color, "bf")

    # 隐藏垂直的第一行
    def setHeaderVisible(self,b:bool=True):
        self.verticalHeader().setVisible(b)

    # 创建标题
    def createTitle(self,title:list,center:bool=True):
        self.setColumnCount(len(title))
        self.setHorizontalHeaderLabels(title)
        self.horizontalHeader().setStretchLastSection(center)
        # self.setColumnWidth(1,300)
        self.verticalHeader().setSectionResizeMode(QHeaderView.Stretch)

    # 添加子项
    def addItem(self,text:[list,str],col:int=None,textAlignment:bool=False):
        '''
        :param text: 参数可以字符串也可以是列表
        :param col: 这个参数只对text是字符串类型才有效
        :param textAlignment: 居中
        :return:
        '''
        if col and col > self.columnCount()-1:
            raise IndexError("The index of crossing the line(max={})".format(self.columnCount()-1))

        rowc = self.rowCount()
        colc = self.columnCount()
        self.insertRow(rowc)

        def getItem() -> QTableWidgetItem:
            item = QTableWidgetItem()
            if textAlignment:
                item.setTextAlignment(Qt.AlignHCenter|Qt.AlignVCenter)
            return item

        # 创建
        for c in range(colc):
            self.setItem(rowc,c,getItem())

        if isinstance(text, str):
            item = self.item(rowc, col if (col or col == 0) else 0)
            item.setText(text)
        elif isinstance(text, list):
            for i, v in enumerate(text):
                item = self.item(rowc, i)
                item.setText(v)

    # 添加窗口
    def addWidget(self,widget:QWidget):
        rowc = self.rowCount()
        self.insertRow(rowc)

        btn = QPushButton()
        # btn.resize(100,100)
        btn.setMinimumSize(100,100)
        btn.setMaximumSize(100,100)
        btn.setText("按钮")
        self.setCellWidget(rowc,0,btn)


class ScriptManagement(QWidget):
    def __init__(self, *args,**kwargs) -> None:
        super().__init__(*args,**kwargs)
        self.setupUi()
    
    def setupUi(self):
        self.setObjectName("self")
        self.resize(674, 428)
        self.tableWidget = QtWidgets.QTableWidget(self)
        self.tableWidget.setGeometry(QtCore.QRect(80, 80, 256, 192))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(1)
        self.tableWidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 0, item)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setHighlightSections(True)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.tableWidget.verticalHeader().setSortIndicatorShown(False)
        self.tableWidget.verticalHeader().setStretchLastSection(False)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("self", "self"))
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("self", "213"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("self", "q231"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.item(0, 0)
        item.setText(_translate("self", "asd"))
        self.tableWidget.setSortingEnabled(__sortingEnabled)

if __name__ == '__main__':
    app = QApplication(sys.argv)

    win = Table()
    win.show()

    sys.exit(app.exec_())
    