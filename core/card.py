# -*- coding: utf-8 -*-

# self implementation generated from reading ui file 'card.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from datetime import datetime
import sys
from PyQt5.QtWidgets import QApplication, QWidget
from PyQt5 import QtCore, QtGui, QtWidgets


class Card(QWidget):
    def __init__(self, *args,**kwargs) -> None:
        super().__init__(*args,**kwargs)
        self.setupUi()


        self.myEvent()
        self.createCard("2313","刘璇")

        # self.countEvent(self.test)
        self.historyEvent(self.test)

    def templeate(self):
        pass

    # 创建卡片
    def createCard(self,number:str,participator="",task=None):
        self.updateID(1)
        self.updateNumber(number)
        self.updateTask(task if task else "test")
        self.updateCount(1)
        self.combox_schedule.setCurrentIndex(1)
        self.comboBox_participator.setItemText(0,participator)
        self.createTime()
        self.updateTime()

        self.setStyleSheet('''
QWidget{
	background-color: qlineargradient(spread:pad, x1:0, y1:0.528136, x2:1, y2:0.517, stop:0 rgba(255, 255, 255, 255), stop:1 rgba(187, 187, 187, 255));
}
QLabel,QComboBox,QPushButton{
background-color:none;
	color: rgb(0, 0, 0);
	font: 12pt "黑体";
}
QPushButton{
border:none;
}
QPushButton:hover{
	color: rgb(28, 58, 255);
}
        ''')


    # 修改id
    def updateID(self,id:int):
        self.label_id.setText(str(id))

    # 修改数字
    def updateNumber(self,number:str):
        self.label_number.setText(number)

    # 修改任务名
    def updateTask(self,task:str):
        self.label_task.setText(task)

    def test(self,a=0):
        print("hidsad",a)

    # 脚本事件
    def viewEvent(self,f,*args):
        if args:
            self.btn_view.clicked.connect(lambda :f(*args))
        else:
            self.btn_view.clicked.connect(lambda: f())

    # 修改使用次数
    def updateCount(self,count:int):
        self.btn_count.setText(str(count))

    # 修改使用次数事件
    def countEvent(self,f,*args):
        '''

        :param f: 这个函数必须带一个参数接受数字
        :param args:
        :return:
        '''
        if args:
            self.btn_count.clicked.connect(lambda :f(self.btn_count.text(),*args))
        else:
            self.btn_count.clicked.connect(lambda : f(self.btn_count.text()))

    # 完成情况事件
    def scheduleEvent(self,f,*args):
        if args:
            self.combox_schedule.currentTextChanged.connect(lambda t:f(t,*args))
        else:
            self.combox_schedule.currentTextChanged.connect(lambda t: f(t))

    # 创建脚本时间
    def createTime(self):
        self.label_create_time.setText(datetime.now().strftime("%Y-%m-%d %H:%M"))

    # 修改脚本时间
    def updateTime(self):
        self.label_update_time.setText(datetime.now().strftime("%Y-%m-%d %H:%M"))

    # 参与者
    def participatorEvent(self, f, *args):
        if args:
            self.comboBox_participator.currentTextChanged.connect(lambda t: f(t, *args))
        else:
            self.comboBox_participator.currentTextChanged.connect(lambda t: f(t))

    # 历史
    def historyEvent(self, f, *args):
        if args:
            self.btn_history.clicked.connect(lambda : f(*args))
        else:
            self.btn_history.clicked.connect(lambda : f())

    # 完成情况改变时事件
    def boxchangeEvent(self,text:str):
        text = self.combox_schedule.currentText()
        style = '''
        QWidget{
        	background-color: <color>;
        }
        QLabel,QComboBox,QPushButton{
        	background-color:none;
        	color: rgb(0, 0, 0);
        	font: 12pt "黑体";
        }
        QPushButton{
        border:none;
        }
        QPushButton:hover{
        	color: rgb(28, 58, 255);
        }
                    '''
        if text == "完成":
            print("dsad")
            style = style.replace("<color>",
                                  "qlineargradient(spread:pad, x1:0, y1:0.528136, x2:1, y2:0.517, stop:0 rgba(86, 255, 109, 255), stop:1 rgba(158, 221, 185, 255))")
        if text == "未完成":
            print("sad")
            style = style.replace("<color>",
                                  "qlineargradient(spread:pad, x1:0, y1:0.528136, x2:1, y2:0.517, stop:0 rgba(255, 255, 255, 255), stop:1 rgba(187, 187, 187, 255));")

        if text == "详情":
            style = style.replace("<color>",
                                  "qlineargradient(spread:reflect, x1:1, y1:0.528, x2:0.057, y2:0.54, stop:0 rgba(215, 226, 185, 255), stop:1 rgba(216, 235, 13, 255))")
        self.setStyleSheet(style)


    def myEvent(self):
        self.combox_schedule.currentIndexChanged.connect(self.boxchangeEvent)

    def setupUi(self):
        self.setObjectName("self")
        self.resize(1192, 50)
        self.setMinimumSize(1192,50)
        self.setMaximumSize(1192,50)
        self.label_id = QtWidgets.QLabel(self)
        self.label_id.setGeometry(QtCore.QRect(8, 10, 50, 30))
        self.label_id.setAlignment(QtCore.Qt.AlignCenter)
        self.label_id.setObjectName("label_id")
        self.btn_count = QtWidgets.QPushButton(self)
        self.btn_count.setGeometry(QtCore.QRect(460, 10, 50, 30))
        self.btn_count.setObjectName("btn_count")
        self.label_number = QtWidgets.QLabel(self)
        self.label_number.setGeometry(QtCore.QRect(80, 10, 60, 30))
        self.label_number.setAlignment(QtCore.Qt.AlignCenter)
        self.label_number.setObjectName("label_number")
        self.label_create_time = QtWidgets.QLabel(self)
        self.label_create_time.setGeometry(QtCore.QRect(655, 10, 150, 30))
        self.label_create_time.setAlignment(QtCore.Qt.AlignCenter)
        self.label_create_time.setObjectName("label_create_time")
        self.label_task = QtWidgets.QLabel(self)
        self.label_task.setGeometry(QtCore.QRect(150, 10, 200, 31))
        self.label_task.setAlignment(QtCore.Qt.AlignCenter)
        self.label_task.setObjectName("label_task")
        self.btn_view = QtWidgets.QPushButton(self)
        self.btn_view.setGeometry(QtCore.QRect(350, 10, 70, 30))
        self.btn_view.setObjectName("btn_view")
        self.label_update_time = QtWidgets.QLabel(self)
        self.label_update_time.setGeometry(QtCore.QRect(810, 10, 150, 30))
        self.label_update_time.setAlignment(QtCore.Qt.AlignCenter)
        self.label_update_time.setObjectName("label_update_time")
        self.btn_history = QtWidgets.QPushButton(self)
        self.btn_history.setGeometry(QtCore.QRect(1090, 10, 50, 30))
        self.btn_history.setObjectName("btn_history")
        self.comboBox_participator = QtWidgets.QComboBox(self)
        self.comboBox_participator.setGeometry(QtCore.QRect(980, 13, 80, 25))
        self.comboBox_participator.setObjectName("comboBox_participator")
        self.comboBox_participator.addItem("")
        self.comboBox_participator.addItem("")
        self.comboBox_participator.addItem("")
        self.combox_schedule = QtWidgets.QComboBox(self)
        self.combox_schedule.setGeometry(QtCore.QRect(560, 13, 80, 25))
        self.combox_schedule.setObjectName("combox_schedule")
        self.combox_schedule.addItem("")
        self.combox_schedule.addItem("")
        self.combox_schedule.addItem("")

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("self", "self"))
        self.label_id.setText(_translate("self", "2"))
        self.btn_count.setText(_translate("self", "3"))
        self.label_number.setText(_translate("self", "50049"))
        self.label_create_time.setText(_translate("self", "2022.1.21 10：30"))
        self.label_task.setText(_translate("self", "Solar Survey"))
        self.btn_view.setText(_translate("self", "view"))
        self.label_update_time.setText(_translate("self", "2022.1.30 9：20"))
        self.btn_history.setText(_translate("self", "历史"))
        self.comboBox_participator.setItemText(0, _translate("self", "刘璇"))
        self.comboBox_participator.setItemText(1, _translate("self", "丁梓靖"))
        self.comboBox_participator.setItemText(2, _translate("self", "赵银鹏"))
        self.combox_schedule.setItemText(0, _translate("self", "完成"))
        self.combox_schedule.setItemText(1, _translate("self", "未完成"))
        self.combox_schedule.setItemText(2, _translate("self", "详情"))

if __name__ == '__main__':
    app = QApplication(sys.argv)

    win = Card()
    win.show()

    sys.exit(app.exec_())
    